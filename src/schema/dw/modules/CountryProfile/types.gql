type IndicatorData {
  year: Int
  value: Float
  id: String
  name: String
  uid: String
}
type ToolTip {
  source: String
  heading: String
}
type IndicatorDataWithToolTip {
  data: [IndicatorData]
  toolTip: ToolTip
}

type IndicatorValueWithToolTip {
  value: String
  toolTip: ToolTip
}
type SpendingAllocation {
  value: Float
  name: String
  color: String
  uid: String
}

type Quintile {
  value: Float
  quintileName: String
  uid: String
  color: String
}
type QuintileDataWithToolTip {
  data: [Quintile]
  toolTip: ToolTip
}
type ResourceData {
  year: Int!
  value: Float!
  flow_name: String!
  flow_id: String!
  short_name: String
  # Category i.e FDI, ODA
  flow_category: String
  # flow either inflow or outflow
  flow_type: String
  # i.e contains flow type as 1st level, flow category as second and flow name as 3rd
  # levels: [String]
  # in or out
  direction: String
  color: String
  uid: String
}

type OverviewTab {
    countryType: String 
   # how many of the poorest people globally live in a country
    poorestPeople: IndicatorValueWithToolTip
    # total population for a given country
    population:  IndicatorValueWithToolTip
    domesticResources: IndicatorValueWithToolTip
    internationalResources:  IndicatorValueWithToolTip
    # recipient countries $PPP, both donor and recipient
    governmentSpendPerPerson:  IndicatorValueWithToolTip
    # donor: gross nation income per capit GNI
    averageIncomerPerPerson: IndicatorDataWithToolTip
    # donor: Income share by quintile
    incomeDistTrend: QuintileDataWithToolTip
}

type PovertyTab {
  # Poverty reduction over time area chart trend
  poverty190Trend: IndicatorDataWithToolTip
  # how deep is poverty %
  depthOfExtremePoverty: IndicatorValueWithToolTip
  # Recipients: how income is distributed, % of income received by each quintil
  incomeDistTrend: QuintileDataWithToolTip
}

type PopulationDistribution {
  group: String
  value: Int 
  year: Int
}

type PopulationPerAgeBand {
  band: String
  value: Int
  year: Int
  uid: String
}
type PopulationDistributionWithToolTip {
  data: [PopulationDistribution]
  toolTip: ToolTip
}
type PopulationPerAgeBandWithToolTip {
  data: [PopulationPerAgeBand]
  toolTip: ToolTip
}
type PopulationTab {
  # total population in a country
  population: IndicatorValueWithToolTip
  # Urban vs Rural population level
  populationDistribution: PopulationDistributionWithToolTip
  # Number of people in 3 age bands (65+, 15- 65, 0 - 14)
  populationPerAgeBand: PopulationPerAgeBandWithToolTip
}

type Domestic {
  # eg Actual or budget
  budget_type: String
  levels: [String]
  year: Int 
  value: Float
  value_ncu: Float
  uid: String
}
type SpendingAllocationWithToolTip {
  data:  [SpendingAllocation]
  toolTip: ToolTip
}

type GovernmentFinance {
  startYear: Int
  #Total revenue for a particular
  totalRevenue: IndicatorValueWithToolTip
  grantsAsPcOfRevenue: IndicatorValueWithToolTip
  # for donut chart 
  spendingAllocation: SpendingAllocationWithToolTip
  # for treemap
  # such as constant 2015 USD for tree map
  currencyCode: String
  # use resourcesRecipient sql
  expenditure: [Domestic]
  revenueAndGrants: [Domestic]
  finance: [Domestic]
}
type ResourceDataWithToolTip {
  data: [ResourceData]
  toolTip: ToolTip
}
type FlowSelection {
  name: String
  # this is the group ID
  id: String
}

type Flow {
  name: String
  id: String
  selections: [FlowSelection]
}
type InternationalResources {
  startYear: Int
  # Gross National Income
  GNI: IndicatorValueWithToolTip
  #Net ODA received, % of GNI for recipient countries
  netODAOfGNIIn: IndicatorValueWithToolTip
  #Net ODA out, % of GNI for recipient countries
  netODAOfGNIOut: IndicatorValueWithToolTip
  # for sidebar chart in international resources section & area partition tree chart default data
  # & line chart in the  tabs section
  resourcesOverTime: ResourceDataWithToolTip
  # Whats the mix of resources can be for donors (out flows) or receipient (in flows)
  # this is for the donut chart
  mixOfResources: ResourceDataWithToolTip
}
type Flows {
  # an array of inflows for a particular country, for area & partition chart
  inflows: [Flow]
   # an array of outflows for a particular country
  outflows: [Flow]
}
type SingleResourceData {
  resources: [IndicatorData]
  color: String
}

type Query {  
  overviewTab(id: String!): OverviewTab
  povertyTab(id: String!): PovertyTab
  populationTab(id: String!): PopulationTab
  governmentFinance(id: String!): GovernmentFinance
  internationalResources(id: String!): InternationalResources
  # eg recipient or donor
  flows(countryType: String!): Flows
  # for area tree map chart dropdown selectoion
  singleResource(
    resourceId: String!, #fdi-devcountries --> gets has concept
    countryId: String!, # AT
    groupById: String # id-to
    ): SingleResourceData
}

