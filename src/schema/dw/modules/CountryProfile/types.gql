type IndicatorData {
  year: Int
  value: Float
  id: String
  name: String
}

type SpendingAllocation {
  value: Float
  name: String
  color: String
}

type Quintile {
  value: Float
  quintileName: String
}

type ToolTip {
  indicator: String
  message: String
}

type ResourceData {
  year: Int!
  value: Float!
  flow_name: String!
  short_name: String
  # Category i.e FDI, ODA
  flow_category: String
  # flow either inflow or outflow
  flow_type: String
  # in or out
  direction: String
  color: String
}

type OverViewTabRecipients {
  # how many of the poorest people globally live in a country
  poorestPeople: String
  # total population for a given country
  population: String
  domesticResources: String
  internationalResources: String
  # recipient countries $PPP
  governmentSpendPerPerson: String
  # TODO: toolTips: [ToolTips]
}

type OverViewTabDonors {
  governmentSpendPerPerson: String
  # donor: gross nation income per capit GNI
  averageIncomerPerPerson: [IndicatorData]
  # donor: Income share by quintile
  incomeDistTrend: [Quintile]
}

union OverViewTab = OverViewTabRecipients | OverViewTabDonors

type PovertyTab {
  # Poverty reduction over time area chart trend
  poverty190Trend: [IndicatorData]
  # how deep is poverty %
  depthOfExtremePoverty: String
  # Recipients: how income is distributed, % of income received by each quintil
  incomeDistTrend: [Quintile]
}

type PopulationDistribution {
  group: String
  value: Int 
  year: Int
}

type PopulationPerAgeBand {
  band: String
  value: Int
  year: Int
}

type PopulationTab {
  # total population in a country
  population: String
  # Urban vs Rural population level
  populationDistribution: [PopulationDistribution]
  # Number of people in 3 age bands (65+, 15- 65, 0 - 14)
  populationPerAgeBand: [PopulationPerAgeBand]
}

type Domestic {
  # eg Actual or budget
  budgetType: String
  # eg total_revenue and grants --> l1
  type: String
  # eg revenue --> l2
  parentCategory: String
  # eg tax revenue --> l3
  category: String
  # eg value-added tax  --> l4
  subCategory: String
  year: Int 
  value: Float
  valueNcu: Float
}

type GovernmentFinance {
  #Total revenue for a particular year if not available return -1 
  # uses gdp
  totalRevenue: String
  grantsAsPcOfRevenue: String
  # for donut chart 
  spendingAllocation: [SpendingAllocation]
  # for treemap
  # such as constant 2015 USD for tree map
  currencyCode: String
  # use resourcesRecipient sql
  expenditure: [Domestic]
  revenueAndGrants: [Domestic]
  finance: [Domestic]
}

type FlowSelection {
  name: String
  # this is the group ID
  id: String
}

type Flow {
  name: String
  id: String
  selections: [FlowSelection]
}

type InternationalResources {
  # Gross National Income
  GNI: String
  #Net ODA received, % of GNI for recipient countries
  netODAOfGNIIn: Int
  #Net ODA out, % of GNI for recipient countries
  netODAOfGNIOut: Int
  # for sidebar chart in international resources section & area partition tree chart default data
  # & line chart in the  tabs section
  resourcesOverTime: [ResourceData]
  # Whats the mix of resources can be for donors (out flows) or receipient (in flows)
  # this is for the donut chart
  mixOfResources: [ResourceData]
  # an array of inflows for a particular country, for area & partition chart
  inflows: [Flow]
   # an array of outflows for a particular country
  outflows: [Flow]
}

type SingleResourceData {
  resources: [IndicatorData]
  color: String
  # in dollars
  total: String
}

type Query {  
  getOverViewTab(id: String!): OverViewTab
  getPovertyTab(id: String!): PovertyTab
  getPopulationTab(id: String!): PopulationTab
  getGovernmentFinance(id: String!): GovernmentFinance
  getInternationalResources(id: String!): InternationalResources
  # for area tree map chart dropdown selectoion
  getSingleResource(
    resourceId: String!, #fdi-devcountries --> gets has concept
    countryId: String!, # AT
    groupById: String # id-to
    ): SingleResourceData
}

