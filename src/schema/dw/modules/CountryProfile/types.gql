type OverViewTab {
  poorestPeople: Int
  population: Int
  domesticPublicResources: Int
  internationalResources: Int
  governmentSpendPerPerson: Int
}

type IndicatorData {
  year: Int
  Value: Int
}
<<<<<<< HEAD

type IndicatorValue {
=======
type IndicatorLabledData {
>>>>>>> c61cd9528bd888f54cfcba8f367ff79da2b7c3b2
  id: String
  year: Int
  value: Int
}

type PovertyTab {
  poverty190Trend: [IndicatorData]
  depthOfExtremePoverty: Int
  quintileIncomeDistBarChart: [IndicatorData]

}

type PopulationTabDonor {
  population: Int
}

type PopulationTabRecipient {
  Urban: [IndicatorData]
  Rural: [IndicatorData]
}

type PopulationPerAge {
  age:[]
  population: Int
  year: Int
}

type GovernmentFinance {
  #Total revenue, % of GDP
  totalRevenue: Int
  grants: [IndicatorLabledData]
  spendingAllocation: [IndicatorLabledData]
  taxRevenue: [IndicatorLabledData]
  nonTaxRevenue: [IndicatorLabledData]
  financing: [IndicatorLabledData]
}

type InternationalResources {
  GNI: Int
  #Net ODA received, % of GNI
  share: Int
  #gross inflows
  resourceOverTimeInflow: [IndicatorLabledData]
  #Government finance by economic type
  mixOfResources: [IndicatorLabledData]
  resourceInflow: [IndicatorLabledData]
  resourceOutflow: [IndicatorLabledData]
}

type Query {
  
  getOverViewTab(country: String!): OverViewTab

  getPovertyTab(country: String): PovertyTab
  #population data for donor countries
  getPopulationTabD(country: String): PopulationTabDonor
  #population data for reciepient countries
  getPopulationTabR(country: String): 
  getGovernmentFinanceDon(country: String): GovernmentFinanceDon 
  getInternationalResources(country: String): InternationalResources
}

