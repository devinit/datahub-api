type IndicatorData {
  year: Int
  Value: Int
}

type IndicatorLabledData {
  year: Int
  Value: Int
  id: String
}

type ResourceData {
  year: Int
  Value: Int
  # is the breakdown of the category eg Gross disbursements for 
  # the ODA category
  id: String
  # Category can be Official (oda, oof), Commercial, Private
  category: String
  # flow type either inflow or outflow
  # this is an optional field may not be queried in final data
  __typeName: String
}

type OverViewTab {
  # how many of the poorest people globally live in a country
  poorestPeople: Int
  # total population for a given country
  population: Int
  domesticPublicResources: Int
  internationalResources: Int
  governmentSpendPerPerson: Int
}

type PovertyTab {
  # Poverty reduction over time area chart trend
  poverty190Trend: [IndicatorData]
  # how deep is poverty %
  depthOfExtremePoverty: Int
  # how income is distributed, % of income received by each quintile
  IncomeDistTrend: [IndicatorData]
}

type PopulationDistribution {
  Urban: [IndicatorData]
  Rural: [IndicatorData]
}

type PopulationPerAgeBand {
  ageBand: String
  population: Int
  year: Int
}

type PopulationTab {
  # total population in a country
  population: Int
  # Urban vs Rural population level
  populationDistribution: [PopulationDistribution]
  # Number of people in 3 age bands (65+, 15- 65, 0 - 14)
  populationPerAgeBand: [PopulationPerAgeBand]
}

type Domestic {
  # eg value added tax
  title: String
  # the levels of the data i.e total-expenditure,recurrent-expenditure,compensation-of-employees
  levels: [String]
  # eg Actual or budget
  budgetType: String
  # if level 1 data comes first, 
  # this is for the tree map and its a convenience field as it can be drived from the levels array
  # so one may query levels or level 
  level: Int 
  year: Int 
  value: Int 
}

type GovernmentFinance {
  #Total revenue for a particular year if not available return -1
  totalRevenue: Int
  totalGrants: Int
  # such as constnat 2015 USD
  currencyType: String
  spendingAllocation: [IndicatorLabledData]
  spendingAllocation: [IndicatorLabledData]
  revenueAndGrants: [Domestic]
  expenditure: [Domestic]
  financing: [Domestic]
}

type InternationalResources {
  # Gross National Income
  GNI: Int
  #Net ODA received, % of GNI
  netODAOfGNI: Int
  # gross inflows for the lines chart in the  tabs section
  # for sidebar chart in international resources section & area partition tree chart
  resourceOverTimeInflows(yearStart: Int!, yearEnd: Int!): [ResourceData]
  # for sidebar chart in international resources section & area partition tree chart
  resourceOverTimeOutflows(yearStart: Int!, yearEnd: Int!): [ResourceData]
  # an array of inflows for a particular country, for area & partition chart
  inflows: [String]
   # an array of outflows for a particular country
  outflows: [String]
}

type Query {  
  getOverViewTab(country: String!, year: Int!): OverViewTab
  getPovertyTab(country: String, year: Int!): PovertyTab
  getPopulationTab(country: String, year: Int!): PopulationTab
  getGovernmentFinance(country: String, year: Int!): GovernmentFinance
  getInternationalResources(country: String, year: Int!): InternationalResources
}

