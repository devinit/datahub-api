// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`gql Types to Typescript types End to End test: should create typescript types from graphql files 1`] = `
"\\"// tslint:disable
// graphql typescript definitions

declare namespace DH {
  interface IGraphQLResponseRoot {
    data?: IQuery;
    errors?: Array<IGraphQLResponseError>;
  }

  interface IGraphQLResponseError {
    message: string;            // Required for all errors
    locations?: Array<IGraphQLResponseErrorLocation>;
    [propName: string]: any;    // 7.2.2 says 'GraphQL servers may provide additional entries to error'
  }

  interface IGraphQLResponseErrorLocation {
    line: number;
    column: number;
  }

  /*
    description: 
  */
  interface IQuery {
    countryProfilePageData: Array<IPage> | null;
    globalPicturePageData: Array<IPage> | null;
    globalPictureThemes: Array<ITheme> | null;
    globalPictureIndicators: Array<IIndicator> | null;
    odaDonorBubbleChartPageData: Array<IPage> | null;
    povertyBubbleChartPageData: Array<IPage> | null;
    spotlightUgandaPageData: Array<IPage> | null;
    unbundlingOdaPageData: Array<IPage> | null;
    unbundlingOOfPageData: Array<IPage> | null;
    whereThePoorPageData: Array<IPage> | null;
    bubbleChartOda: IBubbleChartOda | null;
    bubbleChartPoverty: IBubbleChartPoverty | null;
    bubbleSize: Array<IBubbleChartData> | null;
    bubbleChartIndicatorsList: Array<IIdNamePair> | null;
    overViewTab: OverViewTab | null;
    povertyTab: IPovertyTab | null;
    populationTab: IPopulationTab | null;
    governmentFinance: IGovernmentFinance | null;
    internationalResources: IInternationalResources | null;
    singleResource: ISingleResourceData | null;
    mapData: IMapData | null;
    methodologies: Array<IDataSources> | null;
    overViewTabRegional: IOverViewTabRegional | null;
    povertyTabRegional: IPovertyTabRegional | null;
    populationTabRegional: IPopulationTabRegional | null;
    educationTabRegional: IEducationTabRegional | null;
    healthTabRegional: IHealthTabRegional | null;
    localGovernmentFinance: ILocalGovernmentFinance | null;
    unbundlingAidData: Array<IAidUnit> | null;
    unbundlingSelectionData: IUnbundlingAidSelections | null;
  }

  /*
    description: 
  */
  interface IPage {
    id: string | null;
    title: string | null;
    narrative: string | null;
  }

  /*
    description: 
  */
  interface ITheme {
    id: string | null;
    name: string | null;
    default: string | null;
    order: number | null;
  }

  /*
    description: 
  */
  interface IIndicator {
    id: string | null;
    name: string | null;
    order: number | null;
  }

  /*
    description: 
  */
  interface IBubbleChartOda {
    revenuePerPerson: Array<IBubbleChartData> | null;
    numberInExtremePoverty: Array<IBubbleChartData> | null;
  }

  /*
    description: 
  */
  interface IBubbleChartData {
    year: number | null;
    value: number | null;
    id: string | null;
    name: string | null;
    income_group: string | null;
    region: string | null;
  }

  /*
    description: 
  */
  interface IBubbleChartPoverty {
    revenuePerPerson: Array<IBubbleChartData> | null;
    percentageInExtremePoverty: Array<IBubbleChartData> | null;
  }

  /*
    description: 
  */
  interface IIdNamePair {
    id: string | null;
    name: string | null;
  }

  /*
    description: 
  */
  type OverViewTab = IOverViewTabRecipients | IOverViewTabDonors;



  /*
    description: 
  */
  interface IOverViewTabRecipients {
    poorestPeople: string | null;
    population: string | null;
    domesticResources: string | null;
    internationalResources: string | null;
    governmentSpendPerPerson: string | null;
  }

  /*
    description: 
  */
  interface IOverViewTabDonors {
    governmentSpendPerPerson: string | null;
    averageIncomerPerPerson: Array<IIndicatorData> | null;
    incomeDistTrend: Array<IQuintile> | null;
  }

  /*
    description: 
  */
  interface IIndicatorData {
    year: number | null;
    value: number | null;
    id: string | null;
    name: string | null;
  }

  /*
    description: 
  */
  interface IQuintile {
    value: number | null;
    quintileName: string | null;
  }

  /*
    description: 
  */
  interface IPovertyTab {
    poverty190Trend: Array<IIndicatorData> | null;
    depthOfExtremePoverty: string | null;
    incomeDistTrend: Array<IQuintile> | null;
  }

  /*
    description: 
  */
  interface IPopulationTab {
    population: string | null;
    populationDistribution: Array<IPopulationDistribution> | null;
    populationPerAgeBand: Array<IPopulationPerAgeBand> | null;
  }

  /*
    description: 
  */
  interface IPopulationDistribution {
    group: string | null;
    value: number | null;
    year: number | null;
  }

  /*
    description: 
  */
  interface IPopulationPerAgeBand {
    band: string | null;
    value: number | null;
    year: number | null;
  }

  /*
    description: 
  */
  interface IGovernmentFinance {
    totalRevenue: string | null;
    grantsAsPcOfRevenue: string | null;
    spendingAllocation: Array<ISpendingAllocation> | null;
    currencyCode: string | null;
    expenditure: Array<IDomestic> | null;
    revenueAndGrants: Array<IDomestic> | null;
    finance: Array<IDomestic> | null;
  }

  /*
    description: 
  */
  interface ISpendingAllocation {
    value: number | null;
    name: string | null;
    color: string | null;
  }

  /*
    description: 
  */
  interface IDomestic {
    budgetType: string | null;
    type: string | null;
    parentCategory: string | null;
    category: string | null;
    subCategory: string | null;
    year: number | null;
    value: number | null;
    valueNcu: number | null;
  }

  /*
    description: 
  */
  interface IInternationalResources {
    GNI: string | null;
    netODAOfGNIIn: string | null;
    netODAOfGNIOut: string | null;
    resourcesOverTime: Array<IResourceData> | null;
    mixOfResources: Array<IResourceData> | null;
    inflows: Array<IFlow> | null;
    outflows: Array<IFlow> | null;
  }

  /*
    description: 
  */
  interface IResourceData {
    year: number;
    value: number;
    flow_name: string;
    short_name: string | null;
    flow_category: string | null;
    flow_type: string | null;
    direction: string | null;
    color: string | null;
  }

  /*
    description: 
  */
  interface IFlow {
    name: string | null;
    id: string | null;
    selections: Array<IFlowSelection> | null;
  }

  /*
    description: 
  */
  interface IFlowSelection {
    name: string | null;
    id: string | null;
  }

  /*
    description: 
  */
  interface ISingleResourceData {
    resources: Array<IIndicatorData> | null;
    color: string | null;
  }

  /*
    description: 
  */
  interface IMapData {
    map: Array<IMapUnit> | null;
    name: string | null;
    uom_display: string | null;
    uom: string | null;
    start_year: number | null;
    end_year: number | null;
    description: string | null;
    source: string | null;
    source_link: string | null;
    theme: string | null;
    color: string | null;
    heading: string | null;
    total: number | null;
  }

  /*
    description: 
  */
  interface IMapUnit {
    id: string | null;
    name: string | null;
    year: number | null;
    value: number | null;
  }

  /*
    description: 
  */
  interface IDataSources {
    name: string | null;
    Description: string | null;
    methodology: string | null;
    unit: string | null;
    source: string | null;
    download: IDownload | null;
  }

  /*
    description: 
  */
  interface IDownload {
    csv: string | null;
    zip: string | null;
  }

  /*
    description: 
  */
  interface IOverViewTabRegional {
    poorestPeople: string | null;
    regionalResources: string | null;
    regionalResourcesBreakdown: Array<IIndicatorDataColored> | null;
    localGovernmentSpendPerPerson: string | null;
  }

  /*
    description: 
  */
  interface IIndicatorDataColored {
    year: number | null;
    value: number | null;
    id: string | null;
    name: string | null;
    color: string | null;
  }

  /*
    description: 
  */
  interface IPovertyTabRegional {
    poorestPeople: string | null;
    lifeExpectancy: string | null;
    stdOfLiving: string | null;
  }

  /*
    description: 
  */
  interface IPopulationTabRegional {
    totalPopulation: string | null;
    populationDensity: string | null;
    populationDistribution: Array<IPopulationDistribution> | null;
    averageDependencyRatio: string | null;
    allAverageDependencyRatio: string | null;
  }

  /*
    description: 
  */
  interface IEducationTabRegional {
    pupilTeacherRatioGovtSchl: string | null;
    pupilTeacherRatioOtherSchl: string | null;
    studentsPassRate: string | null;
    studentsPassDistrictRank: string | null;
    primaryEducationfunding: string | null;
  }

  /*
    description: 
  */
  interface IHealthTabRegional {
    districtPerformance: string | null;
    treatmeantOfTb: string | null;
    healthCareFunding: string | null;
  }

  /*
    description: 
  */
  interface ILocalGovernmentFinance {
    revenueAndGrants: Array<IDomestic> | null;
    expenditure: Array<IDomestic> | null;
  }

  /*
    description: 
  */
  interface IUnbundlingAidQuery {
    aidType: string;
    year: number;
    groupBy: string;
    to_di_id?: string | null;
    from_di_id?: string | null;
    sector?: string | null;
    buddle?: string | null;
    channel?: string | null;
  }

  /*
    description: 
  */
  interface IAidUnit {
    value: number | null;
    name: string | null;
    color: string | null;
    id: string | null;
    year: number | null;
  }

  /*
    description: 
  */
  interface IUnbundlingAidSelections {
    to: Array<IIdNamePair> | null;
    from: Array<IIdNamePair> | null;
    channels: Array<IIdNamePair> | null;
    sectors: Array<IIdNamePair> | null;
    form: Array<IIdNamePair> | null;
    years: Array<number> | null;
  }

  /*
    description: 
  */
  interface IToolTip {
    indicator: string | null;
    message: string | null;
  }
}

// tslint:enable
\\""
`;

exports[`gql Types to Typescript types should return merged typedefs 1`] = `
"\\"schema {
  query: Query
}

type Query {
  countryProfilePageData(countrySlug: String!): [Page]
  globalPicturePageData: [Page]
  globalPictureThemes: [Theme]
  globalPictureIndicators(theme: String!): [Indicator]
  odaDonorBubbleChartPageData: [Page]
  povertyBubbleChartPageData: [Page]
  spotlightUgandaPageData: [Page]
  unbundlingOdaPageData: [Page]
  unbundlingOOfPageData: [Page]
  whereThePoorPageData: [Page]
  bubbleChartOda: BubbleChartOda
  bubbleChartPoverty: BubbleChartPoverty
  # we return data for the entire year range for a given indicator id eg donor country ID or indicator table name
  bubbleSize(id: String): [BubbleChartData]
  # IdNamePair is defined in unbundling aid types 
   # this list feeds off oda table from countries and global/concept file
  bubbleChartIndicatorsList: [IdNamePair]
  overViewTab(id: String!): OverViewTab
  povertyTab(id: String!): PovertyTab
  populationTab(id: String!): PopulationTab
  governmentFinance(id: String!): GovernmentFinance
  internationalResources(id: String!): InternationalResources
  # for area tree map chart dropdown selectoion
  singleResource(resourceId: String!, countryId: String!, groupById: String): SingleResourceData
  mapData(id: String!, DACOnly: Boolean): MapData
  methodologies: [DataSources]
  # id is district slug
  overViewTabRegional(id: String!, country: String!): OverViewTabRegional
  povertyTabRegional(id: String!, country: String!): PovertyTabRegional
  populationTabRegional(id: String!, country: String!): PopulationTabRegional
  educationTabRegional(id: String!, country: String!): EducationTabRegional
  healthTabRegional(id: String!, country: String!): HealthTabRegional
  localGovernmentFinance(id: String!, country: String!): LocalGovernmentFinance
  unbundlingAidData(args: UnbundlingAidQuery): [AidUnit]
  unbundlingSelectionData(aidType: String): UnbundlingAidSelections
}

type Theme {
  id: String
  name: String
  default: String
  order: Int
}

type Indicator {
  id: String
  name: String
  order: Int
}

type Page {
  id: String
  title: String
  narrative: String
}

type BubbleChartData {
  year: Int
  value: Float
  id: String
  name: String
  income_group: String
  region: String
}

type BubbleChartOda {
  revenuePerPerson: [BubbleChartData]
  numberInExtremePoverty: [BubbleChartData]
}

type BubbleChartPoverty {
  revenuePerPerson: [BubbleChartData]
  percentageInExtremePoverty: [BubbleChartData]
}

type IndicatorData {
  year: Int
  value: Float
  id: String
  name: String
}

type SpendingAllocation {
  value: Float
  name: String
  color: String
}

type Quintile {
  value: Float
  quintileName: String
}

type ToolTip {
  indicator: String
  message: String
}

type ResourceData {
  year: Int!
  value: Float!
  flow_name: String!
  short_name: String
  # Category i.e FDI, ODA
  flow_category: String
  # flow either inflow or outflow
  flow_type: String
  # in or out
  direction: String
  color: String
}

type OverViewTabRecipients {
  # how many of the poorest people globally live in a country
  poorestPeople: String
  # total population for a given country
  population: String
  domesticResources: String
  internationalResources: String
  # recipient countries $PPP
  governmentSpendPerPerson: String
}

type OverViewTabDonors {
  governmentSpendPerPerson: String
  # donor: gross nation income per capit GNI
  averageIncomerPerPerson: [IndicatorData]
  # donor: Income share by quintile
  incomeDistTrend: [Quintile]
}

union OverViewTab = OverViewTabRecipients | OverViewTabDonors

type PovertyTab {
  # Poverty reduction over time area chart trend
  poverty190Trend: [IndicatorData]
  # how deep is poverty %
  depthOfExtremePoverty: String
  # Recipients: how income is distributed, % of income received by each quintil
  incomeDistTrend: [Quintile]
}

type PopulationDistribution {
  group: String
  value: Int
  year: Int
}

type PopulationPerAgeBand {
  band: String
  value: Int
  year: Int
}

type PopulationTab {
  # total population in a country
  population: String
  # Urban vs Rural population level
  populationDistribution: [PopulationDistribution]
  # Number of people in 3 age bands (65+, 15- 65, 0 - 14)
  populationPerAgeBand: [PopulationPerAgeBand]
}

type Domestic {
  # eg Actual or budget
  budgetType: String
  # eg total_revenue and grants --> l1
  type: String
  # eg revenue --> l2
  parentCategory: String
  # eg tax revenue --> l3
  category: String
  # eg value-added tax  --> l4
  subCategory: String
  year: Int
  value: Float
  valueNcu: Float
}

type GovernmentFinance {
  # Total revenue for a particular year if not available return -1 
   #  uses gdp
  totalRevenue: String
  grantsAsPcOfRevenue: String
  # for donut chart 
  spendingAllocation: [SpendingAllocation]
  # for treemap
   # such as constant 2015 USD for tree map
  currencyCode: String
  # use resourcesRecipient sql
  expenditure: [Domestic]
  revenueAndGrants: [Domestic]
  finance: [Domestic]
}

type FlowSelection {
  name: String
  # this is the group ID
  id: String
}

type Flow {
  name: String
  id: String
  selections: [FlowSelection]
}

type InternationalResources {
  # Gross National Income
  GNI: String
  # Net ODA received, % of GNI for recipient countries
  netODAOfGNIIn: String
  # Net ODA out, % of GNI for recipient countries
  netODAOfGNIOut: String
  # for sidebar chart in international resources section & area partition tree chart default data
   # & line chart in the  tabs section
  resourcesOverTime: [ResourceData]
  # Whats the mix of resources can be for donors (out flows) or receipient (in flows)
   # this is for the donut chart
  mixOfResources: [ResourceData]
  # an array of inflows for a particular country, for area & partition chart
  inflows: [Flow]
  # an array of outflows for a particular country
  outflows: [Flow]
}

type SingleResourceData {
  resources: [IndicatorData]
  color: String
}

type MapUnit {
  # country code Id in DW this is di_id
  id: String
  # countryName derived from entity.csv
  name: String
  year: Int
  value: Float
}

type MapData {
  map: [MapUnit]
  # map indicator user friendly label / slug eg Poverty
  name: String
  # map value unit eg US $ or %
  uom_display: String
  uom: String
  start_year: Int
  end_year: Int
  description: String
  source: String
  source_link: String
  theme: String
  color: String
  heading: String
  # map indicators total for % computations where needed
  total: Float
}

type Download {
  csv: String
  zip: String
}

type DataSources {
  # name of the data you inquiring about
  name: String
  Description: String
  methodology: String
  unit: String
  source: String
  download: Download
}

type IndicatorDataColored {
  year: Int
  value: Float
  id: String
  name: String
  color: String
}

type OverViewTabRegional {
  # WHAT PERCENTAGE OF PEOPLE IN WAKISO LIVE BELOW THE NATIONAL POVERTY LINE? 
   # can be no data or '12%'
  poorestPeople: String
  # WHAT RESOURCES ARE AVAILABLE TO LOCAL GOVERNMENTS IN WAKISO? eg 3.6m or 2.7bn
   # this is a total of local, donor and central government resources
  regionalResources: String
  # IndicatorDataColored is defined in country profile types
   # has local government, donor and central government
  regionalResourcesBreakdown: [IndicatorDataColored]
  # HOW MUCH DOES THE LOCAL GOVERNMENT SPEND PER PERSON?
  localGovernmentSpendPerPerson: String
}

type PovertyTabRegional {
  poorestPeople: String
  # WHAT IS THE AVERAGE LIFE EXPECTANCY? 
  lifeExpectancy: String
  # WHAT IS THE STANDARD OF LIVING SCORE? 
  stdOfLiving: String
}

type PopulationTabRegional {
  # The total population of a given district and the population density in per sq km
  totalPopulation: String
  populationDensity: String
  # Urban vs Rural population level
  populationDistribution: [PopulationDistribution]
  averageDependencyRatio: String
  allAverageDependencyRatio: String
}

type EducationTabRegional {
  # WHAT IS THE PUPIL–TEACHER RATIO IN PRIMARY EDUCATION?...in government schools  and...in all schools 
  pupilTeacherRatioGovtSchl: String
  pupilTeacherRatioOtherSchl: String
  # WHAT PERCENTAGE OF STUDENTS PASS THE PRIMARY LEAVING EXAM? 
  studentsPassRate: String
  studentsPassDistrictRank: String
  # HOW MUCH PRIMARY EDUCATION FUNDING IS THERE? 
  primaryEducationfunding: String
}

type HealthTabRegional {
  # WHAT IS THE DISTRICT LEAGUE HEALTH PERFORMANCE SCORE?
  districtPerformance: String
  # WHAT PERCENTAGE OF TUBERCULOSIS CASES HAVE BEEN SUCCESSFULLY TREATED? 
  treatmeantOfTb: String
  # HOW MUCH LOCAL GOVERNMENT HEALTHCARE FUNDING IS THERE? 
  healthCareFunding: String
}

type LocalGovernmentFinance {
  # come from finance file
  revenueAndGrants: [Domestic]
  expenditure: [Domestic]
}

type AidUnit {
  # this will usually be a summed up aggregate value
  value: Float
  # country or organisation or channel or bundle name
  name: String
  color: String
  id: String
  year: Int
}

type IdNamePair {
  id: String
  name: String
}

type UnbundlingAidSelections {
  # unbundling aid selection options
  to: [IdNamePair]
  from: [IdNamePair]
  channels: [IdNamePair]
  sectors: [IdNamePair]
  form: [IdNamePair]
  years: [Int]
}

input UnbundlingAidQuery {
  aidType: String!
  year: Int!
  groupBy: String!
  to_di_id: String
  from_di_id: String
  sector: String
  buddle: String
  channel: String
}
\\""
`;
